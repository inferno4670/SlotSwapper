{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INFERNO VICTORES\\\\SlotSwapper\\\\frontend\\\\src\\\\components\\\\ThemeToggle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const isDark = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(isDark);\n    if (isDark) {\n      document.body.classList.add('dark-mode');\n    }\n  }, []);\n  const toggleTheme = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', String(newDarkMode));\n    if (newDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    children: darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ThemeToggle","_s","darkMode","setDarkMode","isDark","localStorage","getItem","document","body","classList","add","toggleTheme","newDarkMode","setItem","String","remove","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/INFERNO VICTORES/SlotSwapper/frontend/src/components/ThemeToggle.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ThemeToggle: React.FC = () => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const isDark = localStorage.getItem('darkMode') === 'true';\r\n    setDarkMode(isDark);\r\n    if (isDark) {\r\n      document.body.classList.add('dark-mode');\r\n    }\r\n  }, []);\r\n\r\n  const toggleTheme = () => {\r\n    const newDarkMode = !darkMode;\r\n    setDarkMode(newDarkMode);\r\n    localStorage.setItem('darkMode', String(newDarkMode));\r\n    \r\n    if (newDarkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={toggleTheme}>\r\n      {darkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMO,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IAC1DH,WAAW,CAACC,MAAM,CAAC;IACnB,IAAIA,MAAM,EAAE;MACVG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAG,CAACV,QAAQ;IAC7BC,WAAW,CAACS,WAAW,CAAC;IACxBP,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAEC,MAAM,CAACF,WAAW,CAAC,CAAC;IAErD,IAAIA,WAAW,EAAE;MACfL,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACM,MAAM,CAAC,WAAW,CAAC;IAC7C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAQiB,OAAO,EAAEL,WAAY;IAAAM,QAAA,EAC1Bf,QAAQ,GAAG,sBAAsB,GAAG;EAAqB;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEb,CAAC;AAACpB,EAAA,CA5BID,WAAqB;AAAAsB,EAAA,GAArBtB,WAAqB;AA8B3B,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}