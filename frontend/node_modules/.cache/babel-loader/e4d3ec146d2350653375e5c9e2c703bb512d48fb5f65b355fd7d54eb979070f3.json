{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INFERNO VICTORES\\\\SlotSwapper\\\\frontend\\\\src\\\\components\\\\Marketplace.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getSwappableSlots, createSwapRequest } from '../services/swapService';\nimport { getEvents } from '../services/eventService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Marketplace = () => {\n  _s();\n  const [slots, setSlots] = useState([]);\n  const [userSlots, setUserSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    fetchSwappableSlots();\n    fetchUserSlots();\n  }, []);\n  const fetchSwappableSlots = async () => {\n    try {\n      const data = await getSwappableSlots();\n      setSlots(data);\n    } catch (error) {\n      console.error('Failed to fetch swappable slots:', error);\n    }\n  };\n  const fetchUserSlots = async () => {\n    try {\n      const data = await getEvents();\n      const swappableSlots = data.filter(event => event.status === 'SWAPPABLE');\n      setUserSlots(swappableSlots);\n    } catch (error) {\n      console.error('Failed to fetch user slots:', error);\n    }\n  };\n  const handleRequestSwap = async theirSlotId => {\n    if (!selectedSlot) {\n      alert('Please select your slot to offer');\n      return;\n    }\n    try {\n      await createSwapRequest(selectedSlot, theirSlotId);\n      alert('Swap request sent!');\n      setShowModal(false);\n      setSelectedSlot(null);\n    } catch (error) {\n      console.error('Failed to request swap:', error);\n      alert('Failed to request swap');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Swappable Slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: slots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: slot.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), \" - \", new Date(slot.startTime).toLocaleString(), \" to \", new Date(slot.endTime).toLocaleString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), \"Owner: \", slot.userId.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowModal(true);\n              setSelectedSlot(slot._id);\n            },\n            children: \"Request Swap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, slot._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '20px',\n          borderRadius: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Your Slot to Offer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userSlots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: slot.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), \" - \", new Date(slot.startTime).toLocaleString(), \" to \", new Date(slot.endTime).toLocaleString(), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRequestSwap(selectedSlot),\n              children: \"Offer This Slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, slot._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowModal(false);\n            setSelectedSlot(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Marketplace, \"wtXhTZVRwN+u++jtX5r5sSCuR/c=\");\n_c = Marketplace;\nexport default Marketplace;\nvar _c;\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["React","useState","useEffect","getSwappableSlots","createSwapRequest","getEvents","jsxDEV","_jsxDEV","Marketplace","_s","slots","setSlots","userSlots","setUserSlots","selectedSlot","setSelectedSlot","showModal","setShowModal","fetchSwappableSlots","fetchUserSlots","data","error","console","swappableSlots","filter","event","status","handleRequestSwap","theirSlotId","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","slot","title","Date","startTime","toLocaleString","endTime","userId","name","onClick","_id","style","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","padding","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/INFERNO VICTORES/SlotSwapper/frontend/src/components/Marketplace.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getSwappableSlots, createSwapRequest } from '../services/swapService';\r\nimport { getEvents } from '../services/eventService';\r\n\r\ninterface Slot {\r\n  _id: string;\r\n  title: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  userId: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Event {\r\n  _id: string;\r\n  title: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  status: 'BUSY' | 'SWAPPABLE' | 'SWAP_PENDING';\r\n}\r\n\r\nconst Marketplace: React.FC = () => {\r\n  const [slots, setSlots] = useState<Slot[]>([]);\r\n  const [userSlots, setUserSlots] = useState<Event[]>([]);\r\n  const [selectedSlot, setSelectedSlot] = useState<string | null>(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchSwappableSlots();\r\n    fetchUserSlots();\r\n  }, []);\r\n\r\n  const fetchSwappableSlots = async () => {\r\n    try {\r\n      const data = await getSwappableSlots();\r\n      setSlots(data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch swappable slots:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserSlots = async () => {\r\n    try {\r\n      const data = await getEvents();\r\n      const swappableSlots = data.filter((event: Event) => event.status === 'SWAPPABLE');\r\n      setUserSlots(swappableSlots);\r\n    } catch (error) {\r\n      console.error('Failed to fetch user slots:', error);\r\n    }\r\n  };\r\n\r\n  const handleRequestSwap = async (theirSlotId: string) => {\r\n    if (!selectedSlot) {\r\n      alert('Please select your slot to offer');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await createSwapRequest(selectedSlot, theirSlotId);\r\n      alert('Swap request sent!');\r\n      setShowModal(false);\r\n      setSelectedSlot(null);\r\n    } catch (error) {\r\n      console.error('Failed to request swap:', error);\r\n      alert('Failed to request swap');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Marketplace</h2>\r\n      <div>\r\n        <h3>Swappable Slots</h3>\r\n        <ul>\r\n          {slots.map((slot) => (\r\n            <li key={slot._id}>\r\n              <strong>{slot.title}</strong> - {new Date(slot.startTime).toLocaleString()} to {new Date(slot.endTime).toLocaleString()}\r\n              <br />\r\n              Owner: {slot.userId.name}\r\n              <button onClick={() => {\r\n                setShowModal(true);\r\n                setSelectedSlot(slot._id);\r\n              }}>\r\n                Request Swap\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '5px' }}>\r\n            <h3>Select Your Slot to Offer</h3>\r\n            <ul>\r\n              {userSlots.map((slot) => (\r\n                <li key={slot._id}>\r\n                  <strong>{slot.title}</strong> - {new Date(slot.startTime).toLocaleString()} to {new Date(slot.endTime).toLocaleString()}\r\n                  <button onClick={() => handleRequestSwap(selectedSlot!)}>Offer This Slot</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <button onClick={() => {\r\n              setShowModal(false);\r\n              setSelectedSlot(null);\r\n            }}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Marketplace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}