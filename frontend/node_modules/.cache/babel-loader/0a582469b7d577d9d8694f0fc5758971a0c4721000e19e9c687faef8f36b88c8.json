{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getSwappableSlots,createSwapRequest}from'../services/swapService';import{getEvents}from'../services/eventService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Marketplace=()=>{const[slots,setSlots]=useState([]);const[userSlots,setUserSlots]=useState([]);const[selectedSlot,setSelectedSlot]=useState(null);const[showModal,setShowModal]=useState(false);useEffect(()=>{fetchSwappableSlots();fetchUserSlots();},[]);const fetchSwappableSlots=async()=>{try{const data=await getSwappableSlots();setSlots(data);}catch(error){console.error('Failed to fetch swappable slots:',error);}};const fetchUserSlots=async()=>{try{const data=await getEvents();const swappableSlots=data.filter(event=>event.status==='SWAPPABLE');setUserSlots(swappableSlots);}catch(error){console.error('Failed to fetch user slots:',error);}};const handleRequestSwap=async theirSlotId=>{if(!selectedSlot){alert('Please select your slot to offer');return;}try{await createSwapRequest(selectedSlot,theirSlotId);alert('Swap request sent!');setShowModal(false);setSelectedSlot(null);}catch(error){console.error('Failed to request swap:',error);alert('Failed to request swap');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Marketplace\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Swappable Slots\"}),/*#__PURE__*/_jsx(\"ul\",{children:slots.map(slot=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:slot.title}),\" - \",new Date(slot.startTime).toLocaleString(),\" to \",new Date(slot.endTime).toLocaleString(),/*#__PURE__*/_jsx(\"br\",{}),\"Owner: \",slot.userId.name,/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowModal(true);setSelectedSlot(slot._id);},children:\"Request Swap\"})]},slot._id))})]}),showModal&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.5)',display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',padding:'20px',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Select Your Slot to Offer\"}),/*#__PURE__*/_jsx(\"ul\",{children:userSlots.map(slot=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:slot.title}),\" - \",new Date(slot.startTime).toLocaleString(),\" to \",new Date(slot.endTime).toLocaleString(),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRequestSwap(selectedSlot),children:\"Offer This Slot\"})]},slot._id))}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowModal(false);setSelectedSlot(null);},children:\"Cancel\"})]})})]});};export default Marketplace;","map":{"version":3,"names":["React","useState","useEffect","getSwappableSlots","createSwapRequest","getEvents","jsx","_jsx","jsxs","_jsxs","Marketplace","slots","setSlots","userSlots","setUserSlots","selectedSlot","setSelectedSlot","showModal","setShowModal","fetchSwappableSlots","fetchUserSlots","data","error","console","swappableSlots","filter","event","status","handleRequestSwap","theirSlotId","alert","children","map","slot","title","Date","startTime","toLocaleString","endTime","userId","name","onClick","_id","style","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","padding","borderRadius"],"sources":["C:/Users/INFERNO VICTORES/SlotSwapper/frontend/src/components/Marketplace.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getSwappableSlots, createSwapRequest } from '../services/swapService';\r\nimport { getEvents } from '../services/eventService';\r\n\r\ninterface Slot {\r\n  _id: string;\r\n  title: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  userId: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Event {\r\n  _id: string;\r\n  title: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  status: 'BUSY' | 'SWAPPABLE' | 'SWAP_PENDING';\r\n}\r\n\r\nconst Marketplace: React.FC = () => {\r\n  const [slots, setSlots] = useState<Slot[]>([]);\r\n  const [userSlots, setUserSlots] = useState<Event[]>([]);\r\n  const [selectedSlot, setSelectedSlot] = useState<string | null>(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchSwappableSlots();\r\n    fetchUserSlots();\r\n  }, []);\r\n\r\n  const fetchSwappableSlots = async () => {\r\n    try {\r\n      const data = await getSwappableSlots();\r\n      setSlots(data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch swappable slots:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserSlots = async () => {\r\n    try {\r\n      const data = await getEvents();\r\n      const swappableSlots = data.filter((event: Event) => event.status === 'SWAPPABLE');\r\n      setUserSlots(swappableSlots);\r\n    } catch (error) {\r\n      console.error('Failed to fetch user slots:', error);\r\n    }\r\n  };\r\n\r\n  const handleRequestSwap = async (theirSlotId: string) => {\r\n    if (!selectedSlot) {\r\n      alert('Please select your slot to offer');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await createSwapRequest(selectedSlot, theirSlotId);\r\n      alert('Swap request sent!');\r\n      setShowModal(false);\r\n      setSelectedSlot(null);\r\n    } catch (error) {\r\n      console.error('Failed to request swap:', error);\r\n      alert('Failed to request swap');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Marketplace</h2>\r\n      <div>\r\n        <h3>Swappable Slots</h3>\r\n        <ul>\r\n          {slots.map((slot) => (\r\n            <li key={slot._id}>\r\n              <strong>{slot.title}</strong> - {new Date(slot.startTime).toLocaleString()} to {new Date(slot.endTime).toLocaleString()}\r\n              <br />\r\n              Owner: {slot.userId.name}\r\n              <button onClick={() => {\r\n                setShowModal(true);\r\n                setSelectedSlot(slot._id);\r\n              }}>\r\n                Request Swap\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '5px' }}>\r\n            <h3>Select Your Slot to Offer</h3>\r\n            <ul>\r\n              {userSlots.map((slot) => (\r\n                <li key={slot._id}>\r\n                  <strong>{slot.title}</strong> - {new Date(slot.startTime).toLocaleString()} to {new Date(slot.endTime).toLocaleString()}\r\n                  <button onClick={() => handleRequestSwap(selectedSlot!)}>Offer This Slot</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <button onClick={() => {\r\n              setShowModal(false);\r\n              setSelectedSlot(null);\r\n            }}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Marketplace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}