{"ast":null,"code":"import api from'./api';// Create event\nexport const createEvent=async(title,startTime,endTime,status)=>{const response=await api.post('/events',{title,startTime,endTime,status});return response.data;};// Get all events\nexport const getEvents=async()=>{const response=await api.get('/events');return response.data;};// Get event by ID\nexport const getEventById=async id=>{const response=await api.get(\"/events/\".concat(id));return response.data;};// Update event\nexport const updateEvent=async(id,title,startTime,endTime,status)=>{const response=await api.put(\"/events/\".concat(id),{title,startTime,endTime,status});return response.data;};// Delete event\nexport const deleteEvent=async id=>{const response=await api.delete(\"/events/\".concat(id));return response.data;};","map":{"version":3,"names":["api","createEvent","title","startTime","endTime","status","response","post","data","getEvents","get","getEventById","id","concat","updateEvent","put","deleteEvent","delete"],"sources":["C:/Users/INFERNO VICTORES/SlotSwapper/frontend/src/services/eventService.ts"],"sourcesContent":["import api from './api';\r\n\r\n// Create event\r\nexport const createEvent = async (title: string, startTime: string, endTime: string, status: string) => {\r\n  const response = await api.post('/events', { title, startTime, endTime, status });\r\n  return response.data;\r\n};\r\n\r\n// Get all events\r\nexport const getEvents = async () => {\r\n  const response = await api.get('/events');\r\n  return response.data;\r\n};\r\n\r\n// Get event by ID\r\nexport const getEventById = async (id: string) => {\r\n  const response = await api.get(`/events/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Update event\r\nexport const updateEvent = async (id: string, title: string, startTime: string, endTime: string, status: string) => {\r\n  const response = await api.put(`/events/${id}`, { title, startTime, endTime, status });\r\n  return response.data;\r\n};\r\n\r\n// Delete event\r\nexport const deleteEvent = async (id: string) => {\r\n  const response = await api.delete(`/events/${id}`);\r\n  return response.data;\r\n};"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB;AACA,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAAA,CAAOC,KAAa,CAAEC,SAAiB,CAAEC,OAAe,CAAEC,MAAc,GAAK,CACtG,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,SAAS,CAAE,CAAEL,KAAK,CAAEC,SAAS,CAAEC,OAAO,CAAEC,MAAO,CAAC,CAAC,CACjF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAAA,CAAA,GAAY,CACnC,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACU,GAAG,CAAC,SAAS,CAAC,CACzC,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,YAAY,CAAG,KAAO,CAAAC,EAAU,EAAK,CAChD,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACU,GAAG,YAAAG,MAAA,CAAYD,EAAE,CAAE,CAAC,CAC/C,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,WAAW,CAAG,KAAAA,CAAOF,EAAU,CAAEV,KAAa,CAAEC,SAAiB,CAAEC,OAAe,CAAEC,MAAc,GAAK,CAClH,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACe,GAAG,YAAAF,MAAA,CAAYD,EAAE,EAAI,CAAEV,KAAK,CAAEC,SAAS,CAAEC,OAAO,CAAEC,MAAO,CAAC,CAAC,CACtF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACA,MAAO,MAAM,CAAAQ,WAAW,CAAG,KAAO,CAAAJ,EAAU,EAAK,CAC/C,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACiB,MAAM,YAAAJ,MAAA,CAAYD,EAAE,CAAE,CAAC,CAClD,MAAO,CAAAN,QAAQ,CAACE,IAAI,CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}